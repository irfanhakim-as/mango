#!/usr/bin/env sh

# print help message
function print_help() {
    echo "Usage: ${0} [options]"; echo
    echo "OPTIONS:"
    echo "  -h, --help                   Print help message"
    echo "  -r, --runtime <runtime>      Specify a container runtime"
    echo "  -v, --version <version>      Specify the container image version"
}

# get optional argument
while [[ ${#} -gt 0 ]]; do
    case "${1}" in
        -h|--help)
            print_help
            exit 0
            ;;
        -r|--runtime)
            if [ -z "${2}" ]; then
                echo "ERROR: Please specify a container runtime"
                exit 1
            fi
            CONTAINER_RUNTIME="${2}"
            shift
            ;;
        -v|--version)
            if [ -z "${2}" ]; then
                echo "ERROR: Please specify the container image version"
                exit 1
            fi
            IMAGE_VERSION="${2}"
            shift
            ;;
        *)
            echo "ERROR: Invalid argument (${1})"
            exit 1
            ;;
    esac
    shift
done

# determine container runtime only if not set
if [ -z "${CONTAINER_RUNTIME}" ]; then
    if [ -x "$(command -v docker)" ]; then
        CONTAINER_RUNTIME="docker"
    elif [ -x "$(command -v podman)" ]; then
        CONTAINER_RUNTIME="podman"
    elif [ -x "$(command -v nerdctl)" ]; then
        CONTAINER_RUNTIME="nerdctl"
    else
        echo "ERROR: You must have a supported container runtime installed"
        exit 1
    fi
else
    # check if specified container runtime is installed
    if [ ! -x "$(command -v ${CONTAINER_RUNTIME})" ]; then
        echo "ERROR: Specified container runtime is not installed (${CONTAINER_RUNTIME})"
        exit 1
    fi
fi

# ask for image version if not set
if [ -z "${IMAGE_VERSION}" ]; then
    read -p "Enter Image Version [latest]: " IMAGE_VERSION
fi

readonly APP_NAME="Mango"
readonly REGISTRY="ghcr.io"
readonly REPOSITORY="irfanhakim-as"
readonly IMAGE_NAME="mango"
readonly IMAGE_VERSION=${IMAGE_VERSION:-latest}

echo "#====== Building ${APP_NAME} v${IMAGE_VERSION} at $(date +"%T") ======#"

${CONTAINER_RUNTIME} build --platform linux/amd64 -t ${IMAGE_NAME}:latest . \
&& ${CONTAINER_RUNTIME} images \
&& ${CONTAINER_RUNTIME} tag ${IMAGE_NAME}:latest ${REGISTRY}/${REPOSITORY}/${IMAGE_NAME}:${IMAGE_VERSION} \
&& ${CONTAINER_RUNTIME} push ${REGISTRY}/${REPOSITORY}/${IMAGE_NAME}:${IMAGE_VERSION} \
&& ${CONTAINER_RUNTIME} rmi ${REGISTRY}/${REPOSITORY}/${IMAGE_NAME}:${IMAGE_VERSION}

echo "#====== Build v${IMAGE_VERSION} pushed to ${REGISTRY} at $(date +"%T") ======#"
